==============================================
============starting at this point============
==============================================

============
|03.08.2023|
============
Сборка llvm-clang с lldb (да и вообще):
cmake -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra;lldb" -DLLVM_ENABLE_RUNTIMES="libcxx;libcxxabi;libunwind" -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles" ../llvm

Чтобы не делать глобальный make install
clangbuild=~/apps/llvm-project-llvmorg-13.0.1/build
export PATH=$clangbuild/bin:$PATH
export LD_LIBRARY_PATH=$clangbuild/lib:$LD_LIBRARY_PATH

============
|04.08.2023|
============

infolada dns servers
217.113.115.150
217.113.114.100

install nvidia drivers on debian 12.1.
pkgconfig must be installed
switch to terminal ctrl-alt-F1 (F2 and so on)
$ sudo service lightdm stop
nvidia run file must have to execution permissions
$ sudo chmod 777 NVIDIA-....run

llvm скачивам отсуда. Всё что нужно есть - линтер, lsp сервер, format и т.д.
Как конфигурировать смотри выше, ведь дополнительно ещё нужен lldb.
$ git clone https://github.com/llvm/llvm-project.git

============
|05.08.2023|
============

git config --global alias.co checkout
git config --global alias.ci commit
git config --global alias.st status
git config --global alias.br branch
git config --global alias.hist "log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short"
git config --global alias.type 'cat-file -t'
git config --global alias.dump 'cat-file -p'
git log -p -2 --oneline --max-count=2 --pretty=oneline

<neovim, nvim, packer, setup, first install>
===========
neovim first start, packer install
$ git clone --depth 1 https://github.com/wbthomason/packer.nvim\
 ~/.local/share/nvim/site/pack/packer/start/packer.nvim

============
|06.08.2023|
============

Для загрузки старого clang-format-11 в Debian 12.1. По умолчанию в нём 14-й.
Рабочее решение - подключить репозитории от 11-го Debian bullseye.
$ sudo nvim /etc/apt/sources.list
туда добавляем
deb http://deb.debian.org/debian bullseye non-free-firmware main non-free
deb-src http://deb.debian.org/debian bullseye non-free-firmware main non-free
потом
$ sudo apt update
и можно устанавливать
$ sudo apt install clang-format-11

<c++lib>
===========
Библиотека для векторизации на с++ - EVE
https://github.com/jfalcou/eve

============
|07.08.2023|
============

Логи после выключения
$ journalctl -b-1 | grep systemd
Информация о последних выключениях
$ last reboot | head

Debian 12.1 Firefox stable (non ESR) install
download from official site tarball archive
delete previous install
$ sudo rm -r /opt/firefox
$ sudo tar -jxf ~/Downloads/firefox-*.tar.bz2 -C /opt/
$ mkdir -p ~/.local/share/applications
$ nvim ~/.local/share/applications/firefox.desktop
Then copy and paste the lines below into file (the terminal window):
[Desktop Entry]
Name=Firefox Stable
Comment=Web Browser
Exec=/opt/firefox/firefox %u
Terminal=false
Type=Application
Icon=/opt/firefox/browser/chrome/icons/default/default128.png
Categories=Network;WebBrowser;
MimeType=text/html;text/xml;application/xhtml+xml;application/xml;application/vnd.mozilla.xul+xml;application/rss+xml;application/rdf+xml;image/gif;image/jpeg;image/png;x-scheme-handler/http;x-scheme-handler/https;
StartupNotify=true
Actions=Private;
[Desktop Action Private]
Exec=/opt/firefox/firefox --private-window %u
Name=Open in private mode

Install Google Chrome in Debian 12.1
$ sudo apt install apt-transport-https curl -y
$ curl -fSsL https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor | sudo tee /usr/share/keyrings/google-chrome.gpg >> /dev/null
$ echo deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main | sudo tee /etc/apt/sources.list.d/google-chrome.list
$ sudo apt update
$ sudo apt install google-chrome-stable

QT debug flags for QtWebWidget
$ export QTWEBENGINE_DISABLE_SANDBOX=1
$ export QTWEBENGINE_CHROMIUM_FLAGS=--no-sandbox

VS Code (CTRL+Shift+P)
In order to have two separate VSCode windows open that point 
to the same workspace, press CTRL+Shift+P and then search 
for Duplicate As Workspace in New Window. This will 
open a new window that is associated with the current workspace

============
|08.08.2023|
============

NVIDIA system managment interface
$ nvidia-smi

А зачем делать вот так?:
....
    const CObject&& foo = some_map["key"].returnObj()
....
при этом returnObj() возвращает by value. И потом передавать
в функцию, принимающую const &?

SensorCord::SensorCord вызывает как коллбэк в лямбде по итогу DrawLink() <67>,
далее drawLink() <SensorCord.cpp 242> далее внутри вызывает invoke(...) <550> из
<EntitiTransform.cpp 306> и тут есть мьютекс!!! Зачем такая фигня?
SensorCordInfoHandler при клике, красная область.

EntitiTransform.h - FUNC_WRAPPER_TYPE <242> 
Список из функторов, вызываемых под блокировкой.

keyboard shortcut power off
keybouard -> shortcuts -> custom shortcuts
$ cinnamon-session-quit --power-off

============
|10.08.2023|
============

VSVode - change "show call hierarchy" command shortcut (it shift-alt-H by default):
call command pallete - shift-alt-p
search "show call hierarchy" and press "gear" icons
set new shortcut, ctrl-shift-h for instance, but it shadows a existing shortcut (replace files
or something...)

Formatting with clang daemon.
Clang daemon uses last version of clang-format tool and maybe link it 
to itself when building llvm-clang toolchain performed. There is no obvious way 
to specify custom clang-format binary or clang-format config file in clangd options.

Работаем с коммитами, ищем комминт внёсший изменения в данных строчках.
$ git blame -L 1409,+3 {file} - посмотреть коммиты, затрагивающие строчки с 1409 по 1412.
$ git log --pretty=short -u -L 1410,1410:{file} - довольно подробная инфа о коммитах, включая
commit message и автора о коммитах, внёсших изменения в строчки.

============
|14.08.2023|
============

<c++ snippet>
Grill the Committee 2018 - Herb Sutter first reason to 
use almost always auto is - not forget to initialize
variable by some value, not deduction reason.
And c++17 it guarantie move elision
....
    auto x = std::vector<int> {};
....

============
|15.08.2023|
============

<commit, erase, local, git, remote>
Erase last commit locally and at remote brunch
git reset --hard HEAD~1
git push -f origin {branch}

============
|16.08.2023|
============

<c++, expression>
In c++ 'this' - is a expression, 'new' - is a expression. Every expression
has a value and this value can be ignored, so that constructions is valid
....
    this;   // evaluate expression which result is implicit object parameter 
            // pointer and ignore returned value
    new FooBar; // evaluate expression - allocate memory and call FooBar ctor
                // and ignore return value - pointer to allocated memory
....

============
|22.08.2023|
============

<fzf, rg, grep>
Search text in file in all subderictories
$ rg . --line-number | fzf --print0 -e
--print0 - no new line
$ rg . -n | fzf -e
or make aliases as shown beyond

============
|24.08.2023|
============

<fzf, bash, cd, directory, grep, search>
============
Nice ripgrep and fzf shortcuts to convinient search of 
directories to come and string in files. Add to .bashrc
alias rgfzf='rg . -n | fzf -e'
alias cdfzf="cd / && cd \$(find * -type d 2>&1 | rg -v \"Permission denied\" | fzf)"

<vscode, keybindings, shortcuts>
============
vscode shortcuts stored at ~/.config/Code/user/keybindings.json
To change or find some shortcuts - ctrl+k ctrk+s
I change 
"show call hierarchy"   - ctrl+shift+t 
"tuggle debug panel"    - ctrl+shift+d
"debug disconnect"      - ctrl+shift+F5 -- may not work
also press alt and click at detach icon

<c++, templates, make_pair(), rvalue ref>
============
....
    double foo, bar;
    auto baz = make_pair<double, double>(foo, bar);
....
not working since c++11, because in modern c++ make_pair() function template
defined as
....
    template<typename T1, typename T2>
    std::pair<T1, T2> make_pair(T1 &&u, T2 &&v)
....
and this template expects a reference, not an lvalue. If you try to explicitly
instatiate template with non reference parameter then there will be a error that
"can't bind rvalue reference with lvalue".

============
|25.08.2023|
============

<vim, nvim, simple config, minimalistic>
============
For neovim config see note_book/nvim_conf/nvim_setup.txt (maybe outdated)
Basic usage.

vim config file (.vimrc) location is ~/.vimrc.
neovim config file (init.lua or init.vim) is ~/.config/nvim, anf it must be created manually.

Remember that you can always paste into vim by shift-Ins, like in any regular terminal!!!

<vscode, settings, preferences, wrap tabs>
============
To use tab wrapping instead of straight line of tabs
Preferences -> Settings -> search by "wrap tabs" or Workbench>Editor: Wrap Tabs option

<vim, build, from source>
To build vim from source (primarily for +clipboard)
$ sudo apt-get install xclip libncurses5-dev libcairo2-dev libx11-dev libxpm-dev libxt-dev
$ ./configure --with-features=huge --enable-pythoninterp=yes --enable-cscope --with-x
$ make -j 10
$ sudo make install

